    Профилирование — это динамический анализ программы, в ходе которого измеря-
ются различные величины, связанные с выполнением программы, что позволяет
лучше понять поведение программы. В этом разделе вы узнаете, как профилировать
код Go, чтобы лучше понять, как он работает, и повысить его производительность.
Иногда профилирование кода даже помогает найти ошибки!

    Запомните самое важное: если вы хотите профилировать код Go, для этого вам
нужно импортировать стандартный Go пакет runtime/pprof, прямо или косвенно.
Чтобы открыть страницу справки инструмента pprof, нужно выполнить команду
go tool pprof -help. В ответ вы получите много интересных сведений

    Go поддерживает два вида профилирования: профилирование процессора и профи-
лирование памяти. Выполнять для одного приложения оба вида профилирования
одновременно не рекомендуется, поскольку они плохо совместимы. Однако рас-
приложение profileMe.go является исключением из правила, поскольку используется 
для иллюстрации обоих методов

    Если программа слишком быстро работает, то у профилировщика не будет достаточно
времени, чтобы сделать необходимые измерения, и при загрузке файла данных можно увидеть
сообщение Total samples = 0